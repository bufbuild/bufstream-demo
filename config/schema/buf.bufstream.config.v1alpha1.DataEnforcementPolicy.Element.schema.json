{
  "$id": "buf.bufstream.config.v1alpha1.DataEnforcementPolicy.Element.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "additionalProperties": false,
  "description": "Rules applied to either the key or value of a record.",
  "properties": {
    "coerce": {
      "description": "If the element is not wrapped in the schema registries expected format\n and a schema is associated with it, setting this field to true will\n attempt to resolve a schema for the element and wrap it correctly.",
      "type": "boolean"
    },
    "name_strategy": {
      "anyOf": [
        {
          "enum": [
            "SUBJECT_NAME_STRATEGY_UNSPECIFIED",
            "TOPIC_NAME_STRATEGY"
          ],
          "title": "Subject Name Strategy",
          "type": "string"
        },
        {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      ],
      "description": "The strategy used to associate this element with the subject name when\n looking up the schema."
    },
    "on_internal_error": {
      "anyOf": [
        {
          "enum": [
            "ENFORCEMENT_ACTION_UNSPECIFIED",
            "PASS_THROUGH",
            "REJECT_BATCH",
            "FILTER_RECORD"
          ],
          "title": "Enforcement Action",
          "type": "string"
        },
        {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      ],
      "description": "The action to perform for internal errors (e.g., unavailability of the\n schema registry). If unset, the default behavior is REJECT_BATCH in\n produce and PASS_THROUGH in fetch."
    },
    "on_no_schema": {
      "anyOf": [
        {
          "enum": [
            "ENFORCEMENT_ACTION_UNSPECIFIED",
            "PASS_THROUGH",
            "REJECT_BATCH",
            "FILTER_RECORD"
          ],
          "title": "Enforcement Action",
          "type": "string"
        },
        {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      ],
      "description": "The action to perform for elements that do not have a schema associated\n with them. If skip_parse is true, this action will apply if the message\n is not in the appropriate schema wire format. If unset, the default\n behavior is PASS_THROUGH."
    },
    "on_parse_error": {
      "anyOf": [
        {
          "enum": [
            "ENFORCEMENT_ACTION_UNSPECIFIED",
            "PASS_THROUGH",
            "REJECT_BATCH",
            "FILTER_RECORD"
          ],
          "title": "Enforcement Action",
          "type": "string"
        },
        {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      ],
      "description": "The action to perform for elements that fail to parse with their\n associated schema. Fetch policies should not REJECT_BATCH to avoid\n blocking consumers."
    },
    "redaction": {
      "$ref": "buf.bufstream.config.v1alpha1.RedactPolicy.schema.json",
      "description": "If set, parsed messages will have the specified fields redacted. For\n produce, this will result in data loss."
    },
    "skip_parse": {
      "description": "If true, will skip verifying that the schema applies to the element's\n contents. If set with coerce, coerced messages will be identified as\n the latest version of the element's schema and may be erroneous.\n Setting this field is mutually exclusive with validation and redaction.",
      "type": "boolean"
    },
    "validation": {
      "$ref": "buf.bufstream.config.v1alpha1.ValidationPolicy.schema.json",
      "description": "If set, parsed messages will have semantic validation applied to them\n based off their schema."
    }
  },
  "title": "Element",
  "type": "object"
}

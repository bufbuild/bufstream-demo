# This docker compose file defines all the services needed to run the demo.
services:
  # The core bufstream service.
  bufstream:
    image: bufbuild/bufstream:0.3.22
    hostname: bufstream
    container_name: bufstream
    environment:
      BUFSTREAM_KAFKA_HOST: 0.0.0.0
      BUFSTREAM_KAFKA_PUBLIC_HOST: bufstream
    ports:
      # We'll expose bufstream on the host at port 9092.
      - "9092:9092"
    healthcheck:
      test: ["CMD", "/usr/local/bin/bufstream", "admin", "status", "--exit-code", "--url", "http://127.0.0.1:9089"]
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    # Edit config/bufstream.yaml within this repository to change configuation.
    volumes:
      - "./config/bufstream.yaml:/bufstream.yaml"
    command: [
      "serve",
      "--config", "/bufstream.yaml",
    ]
  # The demo consumer.
  #
  # This is a Docker image that just runs the binary created from cmd/bufstream-demo-consume.
  consume:
    build:
      context: .
      dockerfile: Dockerfile.consume
    depends_on:
      bufstream:
        condition: service_healthy
    command: [
      "--bootstrap", "bufstream:9092",
      "--topic", "email-updated",
      "--search-topic", "products-searched",
      "--list-viewed-topic", "product-list-viewed",
      "--list-filtered-topic", "product-list-filtered",
      # Ordering topics
      "--product-clicked-topic", "product-clicked",
      "--product-viewed-topic", "product-viewed",
      "--product-added-topic", "product-added",
      "--product-removed-topic", "product-removed",
      "--cart-viewed-topic", "cart-viewed",
      "--checkout-started-topic", "checkout-started",
      "--checkout-step-viewed-topic", "checkout-step-viewed",
      "--checkout-step-completed-topic", "checkout-step-completed",
      "--payment-info-entered-topic", "payment-info-entered",
      "--order-updated-topic", "order-updated",
      "--order-completed-topic", "order-completed",
      "--order-refunded-topic", "order-refunded",
      "--order-cancelled-topic", "order-cancelled",
      "--group", "email-verifier"
    ]
  # The demo producer.
  #
  # This is a Docker image that just runs the binary created from cmd/bufstream-demo-produce.
  produce:
    build:
      context: .
      dockerfile: Dockerfile.produce
    depends_on:
      bufstream:
        condition: service_healthy
    command: [
      "--bootstrap", "bufstream:9092",
      "--topic", "email-updated",
      "--search-topic", "products-searched",
      "--list-viewed-topic", "product-list-viewed",
      "--list-filtered-topic", "product-list-filtered",
      # Ordering topics
      "--product-clicked-topic", "product-clicked",
      "--product-viewed-topic", "product-viewed",
      "--product-added-topic", "product-added",
      "--product-removed-topic", "product-removed",
      "--cart-viewed-topic", "cart-viewed",
      "--checkout-started-topic", "checkout-started",
      "--checkout-step-viewed-topic", "checkout-step-viewed",
      "--checkout-step-completed-topic", "checkout-step-completed",
      "--payment-info-entered-topic", "payment-info-entered",
      "--order-updated-topic", "order-updated",
      "--order-completed-topic", "order-completed",
      "--order-refunded-topic", "order-refunded",
      "--order-cancelled-topic", "order-cancelled",
      "--group", "email-verifier",
      "--recreate-topic" # Added for simplicity in demo, usually topics are pre-created
    ]
  # Redpanda Console for Kafka UI. See https://docs.redpanda.com/docs/manage/console/
  # Browse to http://localhost:8080 on your machine.
  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    depends_on:
      bufstream:
        condition: service_healthy
    healthcheck:
      test: nc -z redpanda-console 8080 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: "bufstream:9092"
      KAFKA_CLIENTID: "rpconsole;broker_count=1;host_override=bufstream"
